{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","index.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","renderApp","newAppState","oldAppState","undefined","console","log","newTitle","oldTitle","titleDOM","document","getElementById","innerHTML","text","style","color","renderTitle","title","newContent","oldContent","contentDOM","renderContent","content","store","reducer","state","listeners","dispatch","action","listener","getState","subscribe","push","createStore","type","oldState","newState"],"mappings":"sHAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,ECXe,SAAAQ,EAAAC,GACf,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAA,MAAAF,UAAAD,GAAAC,UAAAD,GAAA,GACAI,EAAAX,OAAAY,KAAAF,GAEA,oBAAAV,OAAAa,wBACAF,IAAAG,OAAAd,OAAAa,sBAAAH,GAAAK,OAAA,SAAAC,GACA,OAAAhB,OAAAiB,yBAAAP,EAAAM,GAAAd,eAIAS,EAAAO,QAAA,SAAApB,GACMF,EAAcU,EAAAR,EAAAY,EAAAZ,MAIpB,OAAAQ,ECAA,SAASa,EAAUC,GAA4B,IAAhBC,EAAgBb,UAAAC,OAAA,QAAAa,IAAAd,UAAA,GAAAA,UAAA,GAAJ,GACpCY,IAAgBC,IACnBE,QAAQC,IAAI,kBAIhB,SAAsBC,GAAyB,IAAfC,EAAelB,UAAAC,OAAA,QAAAa,IAAAd,UAAA,GAAAA,UAAA,GAAJ,GACvC,GAAIiB,IAAaC,EAAU,OAC3BH,QAAQC,IAAI,mBACZ,IAAMG,EAAWC,SAASC,eAAe,SACzCF,EAASG,UAAYL,EAASM,KAC9BJ,EAASK,MAAMC,MAAQR,EAASQ,MARhCC,CAAYd,EAAYe,MAAMd,EAAYc,OAW5C,SAAwBC,GAA6B,IAAjBC,EAAiB7B,UAAAC,OAAA,QAAAa,IAAAd,UAAA,GAAAA,UAAA,GAAJ,GAC/C,GAAI4B,IAAeC,EAAY,OAC/Bd,QAAQC,IAAI,qBACZ,IAAMc,EAAaV,SAASC,eAAe,WAC3CS,EAAWR,UAAYM,EAAWL,KAClCO,EAAWN,MAAMC,MAAQG,EAAWH,MAfpCM,CAAcnB,EAAYoB,QAAQnB,EAAYmB,iBA8DlD,IAAMC,EAnFN,SAAqBC,GACjB,IAAIC,EAAQ,KACNC,EAAY,GAGZC,EAAW,SAACC,GACdH,EAAMD,EAAQC,EAAOG,GACrBF,EAAU1B,QAAQ,SAAC6B,GAAD,OAAcA,OAGpC,OADAF,EAAS,IACF,CACHG,SAPa,kBAAML,GAQnBE,WACAI,UAVc,SAACF,GAAD,OAAcH,EAAUM,KAAKH,KAgFrCI,CApCd,SAAiBR,EAAOG,GACpB,IAAIH,EACA,MAAM,CACFR,MAAO,CACHJ,KAAM,oCACNE,MAAO,OAEXO,QAAS,CACLT,KAAM,oCACNE,MAAO,SAInB,OAAQa,EAAOM,MACX,IAAK,oBACD,OAAO/C,EAAA,GACAsC,EADP,CAEIR,MAAM9B,EAAA,GACCsC,EAAMR,MADR,CAEDJ,KAAKe,EAAOf,SAGxB,IAAK,qBACA,OAAO1B,EAAA,GACDsC,EADN,CAEGR,MAAM9B,EAAA,GACCsC,EAAMR,MADR,CAEDF,MAAMa,EAAOb,UAGzB,QACI,OAAOU,KAMfU,EAAWZ,EAAMO,WAErBP,EAAMQ,UAAU,WACZ,IAAMK,EAAWb,EAAMO,WACvB7B,EAAUmC,EAASD,GACnBA,EAAWC,IAGfnC,EAAUsB,EAAMO,YAChBP,EAAMI,SAAS,CACXO,KAAM,oBACNrB,KAAM,sCAEVU,EAAMI,SAAS,CACXO,KAAM,qBACNnB,MAAO","file":"static/js/main.1cbf9a6a.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","function createStore(reducer) {\n    let state = null\n    const listeners = []\n    const subscribe = (listener) => listeners.push(listener)\n    const getState = () => state\n    const dispatch = (action) => {\n        state=reducer(state, action)//覆盖原对象\n        listeners.forEach((listener) => listener())\n    }\n    dispatch({}) //初始化state\n    return {\n        getState,\n        dispatch,\n        subscribe\n    }\n}\n\nfunction renderApp(newAppState,oldAppState={}) {//防止oldAppState没有传入,所以令oldAppState={}\n    if(newAppState === oldAppState)return //数据没有变化就不渲染 了\n    console.log('render app ...')\n    renderTitle(newAppState.title,oldAppState.title)\n    renderContent(newAppState.content,oldAppState.content)\n}\nfunction renderTitle (newTitle, oldTitle = {}) {\n    if (newTitle === oldTitle) return // 数据没有变化就不渲染了\n    console.log('render title...')\n    const titleDOM = document.getElementById('title')\n    titleDOM.innerHTML = newTitle.text\n    titleDOM.style.color = newTitle.color\n  }\n  \n  function renderContent (newContent, oldContent = {}) {\n    if (newContent === oldContent) return // 数据没有变化就不渲染了\n    console.log('render content...')\n    const contentDOM = document.getElementById('content')\n    contentDOM.innerHTML = newContent.text\n    contentDOM.style.color = newContent.color\n  }\n\n// let newAppState={\n//     ...appState,//复制appState里的内容\n//     title:{ //用一个新对象覆盖原来的title属性\n//         ...appState.title,//复制原来title对象里面的内容\n//         text:`<<React 小书>>` //覆盖text属性\n//     }\n// }\n\nfunction reducer(state, action) {\n    if(!state){\n        return{\n            title: {\n                text: 'React.js 嘿嘿标题',\n                color: 'red',\n            },\n            content: {\n                text: 'React.js 嘻嘻内容',\n                color: 'blue',\n            }\n        }\n    }\n    switch (action.type) {\n        case 'UPDATE_TITLE_TEXT':\n            return { // 构建新的对象并且返回\n                ...state,\n                title:{\n                    ...state.title,\n                    text:action.text\n                }\n            }\n        case 'UPDATE_TITLE_COLOR':\n             return { // 构建新的对象并且返回\n                ...state,\n                title:{\n                    ...state.title,\n                    color:action.color\n            }\n        }\n        default:\n            return state //没有修改,返回原来的对象\n    }\n}\n\n\nconst store = createStore(reducer)\nlet oldState = store.getState() // 缓存旧的state\n\nstore.subscribe(() =>{ \n    const newState = store.getState() //数据可能变化,获取新的state\n    renderApp(newState,oldState) // 把新旧state传禁区渲染\n    oldState = newState//渲染完以后,新的newState变成旧的oldState,等待下一次数据变化重新渲染\n}) \n\nrenderApp(store.getState())//首次渲染页面\nstore.dispatch({\n    type: 'UPDATE_TITLE_TEXT',\n    text: '《React.js 小书》'\n}) // 修改标题文本\nstore.dispatch({\n    type: 'UPDATE_TITLE_COLOR',\n    color: 'blue'\n}) // 修改标题颜色"],"sourceRoot":""}